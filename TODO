// ----------------------------------------------------------------------------------
//
//                                --- TO DO ---
//
// ----------------------------------------------------------------------------------

Debug:
    Renderer.info, https://github.com/mrdoob/three.js/blob/dev/src/renderers/webgl/WebGLInfo.js

Program Management:
    - Shader Chunks

Sprite Shader:
    - atlas / texture merging

Standard Shader:
    - lighting

Geometry Utility Functions (GeomUtils):
    - mergeGeometries()
    - toJson()

Context Lost:
    - Do something about global 'window.renderer.gl', need to handle multiple renderers / gl contexts
  	- Continue in Renderer.initContext()

TypeScript:
    !! Convert to typescript?

// ----------------------------------------------------------------------------------
//
//                          ENGINE OPTIMIZATION IDEAS
//
// ----------------------------------------------------------------------------------

WebGL Reference:
    - ogl, three, picogl, redgl, twgl, webglfundamentals

Optimization:
    - General:
        - Low end gpus, limit to < 2 million triangles, < 400 draw calls per frame
    - Limit Sorting:
        - Dual depth peeling
            https://github.com/tsherif/webgl2examples/blob/master/oit-dual-depth-peeling.html
	    - Weighted, blended order independent transparency
            https://github.com/tsherif/webgl2examples/blob/master/oit.html
            https://github.com/stevinz/three-wboit
    - Reduce Draw Calls:
        - Instancing
        - Scene geometry baking / geometry merging
            - THREE.BufferGeometryUtils.mergeBufferGeometries()
                https://github.com/mrdoob/three.js/blob/de7c36a30773aa7941c46516af71e6993a7640ea/examples/jsm/utils/BufferGeometryUtils.js#L113
        - Occlusion culling
            https://github.com/tsherif/webgl2examples/blob/master/occlusion.html
    - Reduce State Changes:
        - Uniform Blocks
            https://subscription.packtpub.com/book/game-development/9781782167020/1/ch01lvl1sec18/using-uniform-blocks-and-uniform-buffer-objects
    - Speed Lighting:
        - Deferred / Forward+ Rendering
            https://github.com/tsherif/webgl2examples/blob/master/deferred.html
      	    https://learnopengl.com/Advanced-Lighting/Deferred-Shading
		    https://gamedevelopment.tutsplus.com/articles/forward-rendering-vs-deferred-rendering--gamedev-12342
      	    https://docs.unity3d.com/Packages/com.unity.render-pipelines.high-definition@6.5/manual/Forward-And-Deferred-Rendering.html
            https://discourse.threejs.org/t/dr-strangelight-or-how-i-learned-to-stop-worrying-and-love-the-cluster/23104
    - Texture Atlas:
        https://github.com/mapbox/potpack
        https://github.com/oguzeroglu/TextureMerger

Nanite:
    - Nexus (js nanite):
        http://vcg.isti.cnr.it/nexus/#nexus.js
        https://github.com/cnr-isti-vclab/nexus
    - Corto (compression):
        http://vcg.isti.cnr.it/corto/index.html
        https://github.com/cnr-isti-vclab/corto
